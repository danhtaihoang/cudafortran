%!PS-Adobe-2.0
%%Title: compare_E.eps
%%Creator: gnuplot 4.6 patchlevel 0
%%CreationDate: Wed Mar 26 16:32:48 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -40 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (compare_E.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 0)
  /Author (tai)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Mar 26 16:32:48 2014)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Times-Roman) findfont 120 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
588 384 M
63 0 V
6332 0 R
-63 0 V
stroke
516 384 M
[ [(Times-Roman) 120.0 0.0 true true 0 (-3)]
] -40.0 MRshow
1.000 UL
LTb
588 1286 M
63 0 V
6332 0 R
-63 0 V
stroke
516 1286 M
[ [(Times-Roman) 120.0 0.0 true true 0 (-2.5)]
] -40.0 MRshow
1.000 UL
LTb
588 2188 M
63 0 V
6332 0 R
-63 0 V
stroke
516 2188 M
[ [(Times-Roman) 120.0 0.0 true true 0 (-2)]
] -40.0 MRshow
1.000 UL
LTb
588 3091 M
63 0 V
6332 0 R
-63 0 V
stroke
516 3091 M
[ [(Times-Roman) 120.0 0.0 true true 0 (-1.5)]
] -40.0 MRshow
1.000 UL
LTb
588 3993 M
63 0 V
6332 0 R
-63 0 V
stroke
516 3993 M
[ [(Times-Roman) 120.0 0.0 true true 0 (-1)]
] -40.0 MRshow
1.000 UL
LTb
588 4895 M
63 0 V
6332 0 R
-63 0 V
stroke
516 4895 M
[ [(Times-Roman) 120.0 0.0 true true 0 (-0.5)]
] -40.0 MRshow
1.000 UL
LTb
588 384 M
0 63 V
0 4448 R
0 -63 V
stroke
588 264 M
[ [(Times-Roman) 120.0 0.0 true true 0 ( 2)]
] -40.0 MCshow
1.000 UL
LTb
1387 384 M
0 63 V
0 4448 R
0 -63 V
stroke
1387 264 M
[ [(Times-Roman) 120.0 0.0 true true 0 ( 2.5)]
] -40.0 MCshow
1.000 UL
LTb
2187 384 M
0 63 V
0 4448 R
0 -63 V
stroke
2187 264 M
[ [(Times-Roman) 120.0 0.0 true true 0 ( 3)]
] -40.0 MCshow
1.000 UL
LTb
2986 384 M
0 63 V
0 4448 R
0 -63 V
stroke
2986 264 M
[ [(Times-Roman) 120.0 0.0 true true 0 ( 3.5)]
] -40.0 MCshow
1.000 UL
LTb
3786 384 M
0 63 V
0 4448 R
0 -63 V
stroke
3786 264 M
[ [(Times-Roman) 120.0 0.0 true true 0 ( 4)]
] -40.0 MCshow
1.000 UL
LTb
4585 384 M
0 63 V
0 4448 R
0 -63 V
stroke
4585 264 M
[ [(Times-Roman) 120.0 0.0 true true 0 ( 4.5)]
] -40.0 MCshow
1.000 UL
LTb
5384 384 M
0 63 V
0 4448 R
0 -63 V
stroke
5384 264 M
[ [(Times-Roman) 120.0 0.0 true true 0 ( 5)]
] -40.0 MCshow
1.000 UL
LTb
6184 384 M
0 63 V
0 4448 R
0 -63 V
stroke
6184 264 M
[ [(Times-Roman) 120.0 0.0 true true 0 ( 5.5)]
] -40.0 MCshow
1.000 UL
LTb
6983 384 M
0 63 V
0 4448 R
0 -63 V
stroke
6983 264 M
[ [(Times-Roman) 120.0 0.0 true true 0 ( 6)]
] -40.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
588 4895 N
588 384 L
6395 0 V
0 4511 V
-6395 0 V
Z stroke
LCb setrgbcolor
96 2639 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Times-Roman) 120.0 0.0 true true 0 (E)]
] -40.0 MCshow
grestore
LTb
LCb setrgbcolor
3785 84 M
[ [(Times-Roman) 120.0 0.0 true true 0 (T)]
] -40.0 MCshow
LTb
1.100 UP
1.000 UL
LTb
% Begin plot #1
1.100 UP
1.000 UL
LT0
LCb setrgbcolor
6410 4772 M
[ [(Times-Roman) 120.0 0.0 true true 0 (GPU)]
] -40.0 MRshow
LT0
588 1053 TriDF
620 1060 TriDF
652 1067 TriDF
684 1075 TriDF
716 1083 TriDF
748 1091 TriDF
780 1100 TriDF
812 1109 TriDF
844 1118 TriDF
876 1127 TriDF
908 1137 TriDF
940 1147 TriDF
972 1157 TriDF
1004 1167 TriDF
1036 1178 TriDF
1068 1189 TriDF
1100 1200 TriDF
1132 1212 TriDF
1164 1225 TriDF
1196 1237 TriDF
1228 1250 TriDF
1259 1263 TriDF
1291 1277 TriDF
1323 1291 TriDF
1355 1304 TriDF
1387 1319 TriDF
1419 1334 TriDF
1451 1349 TriDF
1483 1364 TriDF
1515 1381 TriDF
1547 1398 TriDF
1579 1415 TriDF
1611 1433 TriDF
1643 1451 TriDF
1675 1470 TriDF
1707 1487 TriDF
1739 1506 TriDF
1771 1527 TriDF
1803 1546 TriDF
1835 1567 TriDF
1867 1587 TriDF
1899 1608 TriDF
1931 1629 TriDF
1963 1652 TriDF
1995 1675 TriDF
2027 1697 TriDF
2059 1719 TriDF
2091 1744 TriDF
2123 1769 TriDF
2155 1793 TriDF
2187 1819 TriDF
2219 1844 TriDF
2251 1871 TriDF
2283 1898 TriDF
2315 1926 TriDF
2347 1954 TriDF
2379 1982 TriDF
2411 2011 TriDF
2443 2040 TriDF
2475 2069 TriDF
2507 2100 TriDF
2538 2130 TriDF
2570 2162 TriDF
2602 2193 TriDF
2634 2225 TriDF
2666 2257 TriDF
2698 2289 TriDF
2730 2322 TriDF
2762 2354 TriDF
2794 2390 TriDF
2826 2428 TriDF
2858 2462 TriDF
2890 2498 TriDF
2922 2534 TriDF
2954 2574 TriDF
2986 2620 TriDF
3018 2654 TriDF
3050 2693 TriDF
3082 2730 TriDF
3114 2773 TriDF
3146 2812 TriDF
3178 2854 TriDF
3210 2896 TriDF
3242 2951 TriDF
3274 2989 TriDF
3306 3030 TriDF
3338 3079 TriDF
3370 3111 TriDF
3402 3152 TriDF
3434 3201 TriDF
3466 3253 TriDF
3498 3295 TriDF
3530 3347 TriDF
3562 3392 TriDF
3594 3444 TriDF
3626 3483 TriDF
3658 3544 TriDF
3690 3588 TriDF
3722 3638 TriDF
3754 3677 TriDF
3786 3730 TriDF
3817 3779 TriDF
3849 3824 TriDF
3881 3865 TriDF
3913 3884 TriDF
3945 3948 TriDF
3977 3966 TriDF
4009 4011 TriDF
4041 4044 TriDF
4073 4068 TriDF
4105 4095 TriDF
4137 4120 TriDF
4169 4145 TriDF
4201 4169 TriDF
4233 4182 TriDF
4265 4213 TriDF
4297 4227 TriDF
4329 4251 TriDF
4361 4278 TriDF
4393 4276 TriDF
4425 4290 TriDF
4457 4316 TriDF
4489 4327 TriDF
4521 4345 TriDF
4553 4359 TriDF
4585 4372 TriDF
4617 4385 TriDF
4649 4400 TriDF
4681 4413 TriDF
4713 4421 TriDF
4745 4430 TriDF
4777 4451 TriDF
4809 4453 TriDF
4841 4469 TriDF
4873 4481 TriDF
4905 4492 TriDF
4937 4499 TriDF
4969 4510 TriDF
5001 4519 TriDF
5033 4530 TriDF
5065 4537 TriDF
5096 4544 TriDF
5128 4552 TriDF
5160 4563 TriDF
5192 4570 TriDF
5224 4579 TriDF
5256 4587 TriDF
5288 4593 TriDF
5320 4607 TriDF
5352 4613 TriDF
5384 4623 TriDF
5416 4629 TriDF
5448 4636 TriDF
5480 4642 TriDF
5512 4649 TriDF
5544 4658 TriDF
5576 4665 TriDF
5608 4671 TriDF
5640 4678 TriDF
5672 4684 TriDF
5704 4689 TriDF
5736 4696 TriDF
5768 4702 TriDF
5800 4708 TriDF
5832 4714 TriDF
5864 4721 TriDF
5896 4725 TriDF
5928 4731 TriDF
5960 4737 TriDF
5992 4743 TriDF
6024 4751 TriDF
6056 4754 TriDF
6088 4760 TriDF
6120 4766 TriDF
6152 4770 TriDF
6184 4775 TriDF
6216 4781 TriDF
6248 4785 TriDF
6280 4791 TriDF
6312 4796 TriDF
6343 4801 TriDF
6375 4805 TriDF
6407 4810 TriDF
6439 4817 TriDF
6471 4821 TriDF
6503 4822 TriDF
6535 4831 TriDF
6567 4833 TriDF
6599 4840 TriDF
6631 4841 TriDF
6663 4846 TriDF
6695 4853 TriDF
6727 4855 TriDF
6759 4860 TriDF
6791 4864 TriDF
6823 4871 TriDF
6855 4871 TriDF
6887 4873 TriDF
6919 4879 TriDF
6951 4883 TriDF
6983 4888 TriDF
6660 4772 TriDF
% End plot #1
% Begin plot #2
1.100 UP
1.000 UL
LTb
LCb setrgbcolor
6410 4652 M
[ [(Times-Roman) 120.0 0.0 true true 0 (CPU)]
] -40.0 MRshow
LTb
588 1052 CircleF
716 1082 CircleF
844 1115 CircleF
972 1153 CircleF
1100 1200 CircleF
1228 1249 CircleF
1355 1304 CircleF
1483 1366 CircleF
1611 1429 CircleF
1739 1507 CircleF
1867 1587 CircleF
1995 1666 CircleF
2123 1764 CircleF
2251 1869 CircleF
2379 1980 CircleF
2507 2087 CircleF
2634 2223 CircleF
2762 2355 CircleF
2890 2492 CircleF
3018 2639 CircleF
3146 2806 CircleF
3274 2984 CircleF
3402 3148 CircleF
3530 3344 CircleF
3658 3525 CircleF
3786 3733 CircleF
3913 3875 CircleF
4041 4031 CircleF
4169 4129 CircleF
4297 4223 CircleF
4425 4297 CircleF
4553 4356 CircleF
4681 4409 CircleF
4809 4457 CircleF
4937 4497 CircleF
5065 4536 CircleF
5192 4568 CircleF
5320 4603 CircleF
5448 4632 CircleF
5576 4663 CircleF
5704 4687 CircleF
5832 4711 CircleF
5960 4735 CircleF
6088 4759 CircleF
6216 4778 CircleF
6343 4799 CircleF
6471 4818 CircleF
6599 4837 CircleF
6727 4854 CircleF
6855 4871 CircleF
6983 4885 CircleF
6660 4652 CircleF
% End plot #2
1.000 UL
LTb
588 4895 N
588 384 L
6395 0 V
0 4511 V
-6395 0 V
Z stroke
1.100 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman
%%Pages: 1
