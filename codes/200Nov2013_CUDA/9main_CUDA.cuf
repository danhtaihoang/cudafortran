!%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%!
!%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%!  
MODULE monte_carlo
IMPLICIT NONE

      CONTAINS
!!!=======================================================================================
!!!=======================================================================================
      ATTRIBUTES(GLOBAL) SUBROUTINE average_thermal(E_av,rdn) 
      IMPLICIT NONE
      
      INTEGER (KIND=8),PARAMETER :: nx=10,ny=10,nz=10,n_average=10
      !REAL    (KIND=8),INTENT(INOUT):: E_av(:)     
      INTEGER (KIND=8) :: iT,i_loop	      
      INTEGER (KIND=8),PARAMETER :: N_rdn=200
      REAL (KIND=8),device,INTENT(IN) :: rdn(N_rdn)

      INTEGER (KIND=8) :: i,j,k,im,ip,jm,jp,km,kp
      REAL    (KIND=8) :: delT,real_na
      REAL    (KIND=8) :: E_tmp1,E_tmp2,energy,S_tmp
      REAL    (KIND=8),DIMENSION(0:nx+1,0:ny+1,0:nz+1) :: S
      REAL    (KIND=8),DIMENSION(nT) :: E_av,T


      iT=threadIdx%x 
 
      E(iT)=0.
      DO i_loop=1,n_average

      E_av(iT)=E_av(iT)+rdn(i_loop+iT)

      END DO
                
      END SUBROUTINE average_thermal
!!!=======================================================================================
      SUBROUTINE ini_rdm_number(seed)
      IMPLICIT NONE
      
      INTEGER (KIND=8),DIMENSION(8) :: time
      INTEGER (KIND=8),DIMENSION(50) :: seed

      CALL DATE_AND_TIME(values=time) 
      seed(1) = time(4)*(360000*time(5) + 6000*time(6) + 100*time(7) + time(8))
      CALL RANDOM_SEED(PUT=seed)

      END SUBROUTINE ini_rdm_number

END MODULE monte_carlo

!!!=======================================================================================
!!!%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%!
      PROGRAM main_sum
      USE cudafor                                                  
      USE monte_carlo
      USE curand_m

      IMPLICIT NONE

      INTEGER (KIND=8),PARAMETER :: nT=11
      REAL (KIND=8),DEVICE :: Ed(nT)
      REAL (KIND=8) :: E(nT)
      INTEGER (KIND=8) :: iT
      INTEGER (KIND=8),PARAMETER :: N_rdn=200
      REAL (KIND=8),device :: deviceData(N_rdn),rdn(N_rdn)
      INTEGER (KIND=8) :: gen,seed1
      INTEGER (KIND=8),DIMENSION(50) :: seed

      REAL (KIND=8),PARAMETER :: Tmin=1.,Tmax=6.
      REAL (KIND=8) :: delT

      !!! Generate pseudo random number -------------------------
      CALL curandCreateGenerator(gen,CURAND_RNG_PSEUDO_DEFAULT)
      CALL ini_rdm_number(seed)
      seed1=seed(1) 
      CALL curandSetPseudoRandomGeneratorSeed(gen,seed1)
      CALL curandGenerateUniform(gen,deviceData,N_rdn)
      rdn=deviceData

      
      IF (nT==1) THEN
            delT=0.
      ELSE
            delT=(Tmax-Tmin)/real(nT-1)
      END IF

      DO iT=1,nT                      
            T(iT)=Tmin+delT*real(iT-1)
      END DO 

      Ed=E   !!! Host to Divice transpers
      CALL average_thermal<<<1,nT>>>(Ed,rdn)
      E=Ed    !! Device to Host transpers


      OPEN(unit=20,file='average_thermal.dat')   
      DO iT=1,nT
            WRITE(20,*) iT,E(iT)
            WRITE(*,*) iT,E(iT)
      END DO 

      CLOSE(20)
      
      ! Destroy the generator
      CALL curandDestroyGenerator(gen)

      END PROGRAM main_sum
      
!!!%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
!!!%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
!!!------------------------------------------------------------------------------------
      energy=0. ; i_rdn=0

      DO i=1,nx
      ip=i+1
      im=i-1
      DO j=1,ny
      jp=j+1
      jm=j-1
      DO k=1,nz
      kp=k+1
      km=k-1

      i_rdn=i_rdn+1

      E_tmp1=S(i,j,k)*(S(ip,j,k)+S(im,j,k)+S(i,jp,k)+S(i,jm,k)+S(i,j,kp)+S(i,j,km))
      E_tmp2=-E_tmp1
      S_tmp=S(i,j,k)

            IF (exp(-(E_tmp2-E_tmp1)/T(iT)) > rdn(i_rdn)) THEN
                  S(i,j,k)=-S_tmp
                  E_tmp1=E_tmp2
            END IF
            energy=energy+E_tmp1
            M=M+(-1)**mod(i+j+k,2)*S(i,j,k)
      END DO
      END DO
      END DO
      energy=energy/(2.*real_na)
      !!------------------------------------------------------------------------------------

















